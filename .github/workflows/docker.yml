name: docker-build

on:
  workflow_dispatch:
  push:
    branches:
      - main

env:
  OLS_VERSION: 1.7.16
  PHP_STABLE_VERSION: '8.2.3'

jobs:
  buildx:
    runs-on: self-hosted
    strategy:
      fail-fast: false
      matrix: 
        PHP_VERSION: ['8.0.28', '8.1.16', '8.2.3']

    steps:
      - name: Checkout
        uses: actions/checkout@v3
        with:
          fetch-depth: 0 # Required due to the way Git works, without it this action won't be able to find any or the correct tags

      # https://github.com/marketplace/actions/docker-setup-buildx
      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v2

      # https://github.com/marketplace/actions/docker-login
      - name: Login to Docker Hub
        uses: docker/login-action@v2
        with:
          username: ${{ secrets.DOCKERHUB_USERNAME }}
          password: ${{ secrets.DOCKERHUB_TOKEN }}

      # https://github.com/orgs/community/discussions/26625#discussioncomment-3252582
      - name: Determine PHP Major/Minor Version
        id: php-version
        run: |
          _0=$(echo ${{ matrix.PHP_VERSION }} | cut -d. -f1)
          _1=$(echo ${{ matrix.PHP_VERSION }} | cut -d. -f2)
          echo "_0=$_0" >> $GITHUB_OUTPUT
          echo "_1=$_1" >> $GITHUB_OUTPUT

      # https://github.com/marketplace/actions/build-and-push-docker-images
      - name: Build and Push Docker Image
        uses: docker/build-push-action@v4
        if: matrix.PHP_VERSION != env.PHP_STABLE_VERSION
        with:
          context: template
          platforms: linux/arm64
          build-args: |
            OLS_VERSION=${{ env.OLS_VERSION }}
            PHP_VERSION=${{ matrix.PHP_VERSION }}
            PHP_MAJOR_VERSION=${{ steps.php-version.outputs._0 }}
            PHP_MINOR_VERSION=${{ steps.php-version.outputs._1 }}
          push: true
          tags: ndigitals/openlitespeed:${{ env.OLS_VERSION }}-lsphp${{ steps.php-version.outputs._0 }}${{ steps.php-version.outputs._1 }}
          cache-from: type=registry,ref=ndigitals/openlitespeed:latest
          cache-to: type=inline

      # https://github.com/marketplace/actions/build-and-push-docker-images
      - name: Build and Push Docker Image - latest
        uses: docker/build-push-action@v4
        if: matrix.PHP_VERSION == env.PHP_STABLE_VERSION
        with:
          context: template
          platforms: linux/arm64
          build-args: |
            OLS_VERSION=${{ env.OLS_VERSION }}
            PHP_VERSION=${{ matrix.PHP_VERSION }}
            PHP_MAJOR_VERSION=${{ steps.php-version.outputs._0 }}
            PHP_MINOR_VERSION=${{ steps.php-version.outputs._1 }}
          push: true
          tags: ndigitals/openlitespeed:${{ env.OLS_VERSION }}-lsphp${{ steps.php-version.outputs._0 }}${{ steps.php-version.outputs._1 }},ndigitals/openlitespeed:latest
          cache-from: type=registry,ref=ndigitals/openlitespeed:latest
          cache-to: type=inline

      # https://github.com/marketplace/actions/docker-hub-description
      - name: Update Docker Hub README & Description
        uses: peter-evans/dockerhub-description@v3
        if: matrix.PHP_VERSION == env.PHP_STABLE_VERSION
        with:
          username: ${{ secrets.DOCKERHUB_USERNAME }}
          password: ${{ secrets.DOCKERHUB_TOKEN }}
          repository: ndigitals/openlitespeed
          short-description: ${{ github.event.repository.description }}

      # https://github.com/marketplace/actions/semver-conventional-commits
      - name: Get Versions
        id: semver
        uses: ietf-tools/semver-action@v1
        if: matrix.PHP_VERSION == env.PHP_STABLE_VERSION
        with:
          token: ${{ github.token }}
          branch: main

      - name: Create Release Name
        id: release-name
        if: matrix.PHP_VERSION == env.PHP_STABLE_VERSION
        run: |
          RELEASE_NAME=$(echo ${{ steps.semver.outputs.nextStrict }} Release)
          echo "RELEASE_NAME=$RELEASE_NAME" >> $GITHUB_OUTPUT

      # https://github.com/marketplace/actions/universal-changelog-generator
      - name: Generate a Changelog
        id: changelog
        uses: mrchief/universal-changelog-action@v1.3.2
        if: matrix.PHP_VERSION == env.PHP_STABLE_VERSION
        with:
          previousReleaseTagNameOrSha: ${{ steps.semver.outputs.current }}
          nextReleaseTagName: 'main'
          nextReleaseName: ${{ steps.release-name.outputs.RELEASE_NAME }}

      # https://github.com/marketplace/actions/create-release
      - name: Create Release
        uses: ncipollo/release-action@v1.12.0
        if: matrix.PHP_VERSION == env.PHP_STABLE_VERSION
        with:
          name: ${{ steps.release-name.outputs.RELEASE_NAME }}
          tag: ${{ steps.semver.outputs.next }}
          commit: ${{ github.sha }}
          body: ${{ steps.changelog.outputs.changelog }}

